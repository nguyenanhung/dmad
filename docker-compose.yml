version: '3'
networks:
    private_network:
        ipam:
            driver: default
            config:
                -   subnet: 10.2.0.0/24

services:
    unbound:
        image: "klutchell/unbound"
        container_name: unbound
        restart: unless-stopped
        hostname: "unbound"
        networks:
            private_network:
                ipv4_address: 10.2.0.200
#        deploy:
#            resources:
#                limits:
#                    cpus: "1"
#                    memory: 512M
        healthcheck:
            test: [ "CMD", "dig", "@127.0.0.1", "google.com" ]
            interval: 30s
            timeout: 5s
            retries: 3

    pihole:
        image: "pihole/pihole:latest"
        container_name: pihole
        restart: unless-stopped
        hostname: pihole
        dns:
            - 127.0.0.1
            - 10.2.0.200
        env_file:
            - .env
        volumes:
            - "./etc-pihole/:/etc/pihole/"
            - "./etc-dnsmasq.d/:/etc/dnsmasq.d/"
        cap_add:
            - NET_ADMIN
        networks:
            private_network:
                ipv4_address: 10.2.0.100
        healthcheck:
            test: [ "CMD", "dig", "@127.0.0.1", "google.com" ]
            interval: 30s
            timeout: 5s
            retries: 3

    wg-easy:
        image: "ghcr.io/wg-easy/wg-easy:13"
        container_name: wg-easy
        restart: unless-stopped
        env_file:
            - .env
        volumes:
            - .:/etc/wireguard
        ports:
            - "51820:51820/udp"
            - "51821:51821/tcp"
        cap_add:
            - NET_ADMIN
            - SYS_MODULE
        sysctls:
            - net.ipv4.ip_forward=1
            - net.ipv4.conf.all.src_valid_mark=1
        dns:
            - 10.2.0.100
            - 10.2.0.200
        networks:
            private_network:
                ipv4_address: 10.2.0.3
        depends_on:
            - pihole
            - unbound

    caddy:
        image: "caddy:latest"
        container_name: caddy
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - ./sites:/etc/caddy/sites
            - caddy_data:/data
            - caddy_config:/config
        networks:
            private_network:
                ipv4_address: 10.2.0.4
        healthcheck:
            test: [ "CMD", "pgrep", "caddy" ]
            interval: 30s
            timeout: 5s
            retries: 3
        logging:
            options:
                max-size: "10m"
                max-file: "7"
        depends_on:
            - wg-easy
            - pihole

volumes:
    caddy_data:
    caddy_config:
